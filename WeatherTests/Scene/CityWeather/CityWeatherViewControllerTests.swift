//
//  CityWeatherViewControllerTests.swift
//  Weather
//
//  Created by Anuwat Sittichak on 21/4/2563 BE.
//  Copyright (c) 2563 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import Weather
import XCTest

class CityWeatherViewControllerTests: XCTestCase {
    // MARK: Subject under test
    
    var sut: CityWeatherViewController!
    var window: UIWindow!
    
    // MARK: Test lifecycle
    
    override func setUp() {
        super.setUp()
        window = UIWindow()
        setupCityWeatherViewController()
    }
    
    override func tearDown() {
        window = nil
        super.tearDown()
    }
    
    // MARK: Test setup
    
    func setupCityWeatherViewController() {
        let bundle = Bundle.main
        let storyboard = UIStoryboard(name: "Main", bundle: bundle)
        sut = storyboard.instantiateViewController(withIdentifier: "CityWeatherViewController") as! CityWeatherViewController
    }
    
    func loadView() {
        window.addSubview(sut.view)
        RunLoop.current.run(until: Date())
    }
    
    // MARK: Test doubles
    
//    class CityWeatherBusinessLogicSpy: CityWeatherBusinessLogic {
//        var doSomethingCalled = false
//
//        func doSomething(request: CityWeather.Something.Request) {
//            doSomethingCalled = true
//        }
//    }
    
    // MARK: Tests
    
//    func testShouldDoSomethingWhenViewIsLoaded() {
//        // Given
//        let spy = CityWeatherBusinessLogicSpy()
//        sut.interactor = spy
//        
//        // When
//        loadView()
//        
//        // Then
//        XCTAssertTrue(spy.doSomethingCalled, "viewDidLoad() should ask the interactor to do something")
//    }
//    
//    func testDisplaySomething() {
//        // Given
//        let viewModel = CityWeather.Something.ViewModel()
//        
//        // When
//        loadView()
//        sut.displaySomething(viewModel: viewModel)
//        
//        // Then
//        //XCTAssertEqual(sut.nameTextField.text, "", "displaySomething(viewModel:) should update the name text field")
//    }
}
